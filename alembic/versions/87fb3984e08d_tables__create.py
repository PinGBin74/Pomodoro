"""tables__create

Revision ID: 87fb3984e08d
Revises: 1064e087f23b
Create Date: 2025-04-18 18:28:46.942187

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import inspect

# revision identifiers, used by Alembic.
revision: str = "87fb3984e08d"
down_revision: Union[str, None] = "1064e087f23b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = inspect(conn)

    if not inspector.has_table("Categories"):
        op.create_table(
            "Categories",
            sa.Column("id", sa.Integer(), nullable=False),
            sa.Column("type", sa.String(), nullable=True),
            sa.Column("name", sa.String(), nullable=False),
            sa.PrimaryKeyConstraint("id"),
        )

    if not inspector.has_table("Tasks"):
        op.create_table(
            "Tasks",
            sa.Column("id", sa.Integer(), nullable=False),
            sa.Column("name", sa.String(), nullable=False),
            sa.Column("pomodoro_count", sa.Integer(), nullable=False),
            sa.Column("category_id", sa.Integer(), nullable=False),
            sa.PrimaryKeyConstraint("id"),
        )

    if not inspector.has_table("UserProfile"):
        op.create_table(
            "UserProfile",
            sa.Column("id", sa.Integer(), nullable=False),
            sa.Column("username", sa.String(), nullable=False),
            sa.Column("password", sa.String(), nullable=False),
            sa.Column("access_token", sa.String(), nullable=False),
            sa.PrimaryKeyConstraint("id"),
        )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("UserProfile")
    op.drop_table("Tasks")
    op.drop_table("Categories")
    # ### end Alembic commands ###
